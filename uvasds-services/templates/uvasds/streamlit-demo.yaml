apiVersion: apps/v1
kind: Deployment
metadata:
  name: streamlit-demo-deployment
  namespace: uvasds-services
  labels:
    app: streamlit-demo
spec:
  replicas: 1
  selector:
    matchLabels:
      app: streamlit-demo
  template:
    metadata:
      labels:
        app: streamlit-demo
    spec:
      containers:
      - name: streamlit-demo-container
        image: ghcr.io/uvasds-systems/streamlit-demo:{{ .Values.version.streamlit }}
        ports:
        - containerPort: 8080
        resources:
          requests:
            memory: "1024Mi"
            cpu: "1000m"
          limits:
            memory: "1024Mi"
            cpu: "1000m"
        env:
        - name: NAME
          value: UVASDS
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.org/websocket-services: "streamlit-service"
    # acme.cert-manager.io/http01-edit-in-place: "true"
    # cert-manager.io/cluster-issuer: letsencrypt-cluster-issuer

    nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-body-size: "0"
    nginx.ingress.kubernetes.io/enable-websockets: "true"
    nginx.ingress.kubernetes.io/connection-proxy-header: "keep-alive"
    nginx.ingress.kubernetes.io/proxy-http-version: "1.1"

    # nginx.ingress.kubernetes.io/ssl-redirect: "true"

  name: streamlit-demo-ingress
  namespace: uvasds-services
spec:
#   tls:
#   - hosts:
#     - streamlit-demo.pods.uvarc.io
  rules:
  - host: streamlit-demo.pods.uvarc.io
    http:
      paths:
      - pathType: Prefix
        path: "/"
        backend:
          service:
            name: streamlit-service
            port:
              number: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: streamlit-service
  namespace: uvasds-services
spec:
  selector:
    app: streamlit-demo
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080
